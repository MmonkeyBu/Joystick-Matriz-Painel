// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ---- //
// main //
// ---- //

#define main_wrap_target 0
#define main_wrap 6
#define main_pio_version 0

static const uint16_t main_program_instructions[] = {
            //     .wrap_target
    0x6621, //  0: out    x, 1            side 0 [6]
    0x1424, //  1: jmp    !x, 4           side 1 [4]
    0xf401, //  2: set    pins, 1         side 1 [4]
    0x1406, //  3: jmp    6               side 1 [4]
    0xf201, //  4: set    pins, 1         side 1 [2]
    0xe200, //  5: set    pins, 0         side 0 [2]
    0xe100, //  6: set    pins, 0         side 0 [1]
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program main_program = {
    .instructions = main_program_instructions,
    .length = 7,
    .origin = -1,
    .pio_version = main_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config main_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + main_wrap_target, offset + main_wrap);
    sm_config_set_sideset(&c, 1, false, false);
    return c;
}

void main_program_init(PIO pio, uint sm, uint offset, uint pin);

#endif

